# Background

# 1. 클라이언트

- 클라이언트란 서비스를 이용하기 위해 네트워크를 통해 요청을 보내는 주체를 뜻함
  - 예를들어 인터넷에서 웹페이지를 보기 위해 웹 브라우즈를 실행하면 웹 브라우저가 클라이언트가 됨. ⇒ 보통 웹 개발에서는 크롬, 사파리, 등 웹브라우저가 클라이언트가 된다 할 수 있음

# 2. 웹서버

- 웹 서버는 클라이언트의 요청에 따라 HTML, CSS, JS, 이미지 등 정적 파일을 응답하여 제공하는 소프트웨어를 의미한다.
- 웹 서버는 HTTP 프로토콜을 사용하여 클라이언트와 통신한다.
  - 대표적인 웹서버로는 Nginx, Apache 등이 있다.

# 3. WAS (Web Application Server)

- WAS는 클라이언트 요청에 대해 동적인 처리를 담당하는 영역이다.
- 웹서버와 달리 어플리케이션 로직을 실행 할 수 있도록 구성됨
  - 예를 들어 회원 가입이나 로그인 등의 로직을 처리하는 영역이 WAS 라고 할 수 있음
  - 대표적인 WAS는 Tomcat, JBoss, WebLogic 등이 있다.

# 4. DB (DataBase)

- DB는 조직이나 개인이 필요한 정보를 체계적으로 저장, 관리하고 검색할 수 있는 시스템이다.
- DB는 일반적으로 다수의 사용자가 공유할 수 있으며, 대규모 데이터의 저장과 검색을 처리 할 수 있다.
- RDBMS(관계형 DB)
  - 관계형은 데이터를 테이블로 구성하고, 테이블 간의 관계를 정의하여 데이터를 저장하는 방식이다. SQL과 같은 쿼리 언어를 사용하여 데이터를 검색, 추가, 수정, 삭제가 가능하다.
  - 대표적으로 MySQL, PostgreSQL 등이 있다.
- NoSQL
  - 관계형 데이터베이스의 한계를 극복하기 위해 만들어진 데이터베이스
  - NoSQL은 자유로운 구조로 데이터를 저장하며, 분산 처리 및 고성능 처리를 위해 설계됨
  - 데이터를 테이블이 아닌 컬렉션 or 도큐먼트 단위로 저장한다. 컬렉션은 테이블과 유사한 개념이고, 도큐먼트는 일반적으로 JSON, BSON형식으로 저장되는 일정한 구조를 가진 문서이다.
  - 대표적으로 MongoDB, Redis, Firebase 등이 있다.

# 일반 웹서비스의 흐름

클라이언트 → 웹서버 → WAS → DB로 요청되고, DB → WAS → 웹서버 → 클라이언트로 응답된다.

![image-20231003220623256](C:\Users\taege\AppData\Roaming\Typora\typora-user-images\image-20231003220623256.png)

출처

https://blog.naver.com/gi_balja/223028077537
